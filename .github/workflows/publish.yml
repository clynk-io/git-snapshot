name: Publish

on:
  push:
    tags: ["v*"]

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true

  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

  build-linux-x86:
    runs-on: ubuntu-latest
    needs: create-release
    env:
      ARCHIVE_NAME: git-snapshot.linux-x86.tar.gz
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release
      - name: Package
        run: tar -C target/release -czvf ${{ env.ARCHIVE_NAME }} git-snapshot
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME}}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/octet-stream

  build-linux-x86-vendored:
    runs-on: ubuntu-latest
    needs: create-release
    env:
      ARCHIVE_NAME: git-snapshot.linux-x86-vendored.tar.gz
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release --features vendored
      - name: Package
        run: tar -C target/release -czvf ${{ env.ARCHIVE_NAME }} git-snapshot
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME}}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/octet-stream

  build-linux-aarch64-vendored:
    runs-on: ubuntu-latest
    needs: create-release
    env:
      ARCHIVE_NAME: git-snapshot.linux-aarch64-vendored.tar.gz
    steps:
      - uses: actions/checkout@v3
      - run: rustup target add aarch64-unknown-linux-gnu
      - run: sudo apt-get install gcc-aarch64-linux-gnu
      - run: mkdir .cargo && echo -e '[target.aarch64-unknown-linux-gnu]\nlinker = "aarch64-linux-gnu-gcc"' > .cargo/config
      - name: Build
        run: cargo build --release --target aarch64-unknown-linux-gnu --features vendored
      - name: Package
        run: tar -C target/aarch64-unknown-linux-gnu/release -czvf ${{ env.ARCHIVE_NAME }} git-snapshot
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME}}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/octet-stream

  build-macos-x86_64:
    runs-on: macos-latest
    needs: create-release
    env:
      ARCHIVE_NAME: git-snapshot.macos-x86_64.tar.gz
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release
      - name: Package
        run: tar -C target/release -czvf ${{ env.ARCHIVE_NAME }} git-snapshot
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME }}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/octet-stream

  build-macos-x86_64-vendored:
    runs-on: macos-latest
    needs: create-release
    env:
      ARCHIVE_NAME: git-snapshot.macos-x86_64-vendored.tar.gz
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release --features vendored
      - name: Package
        run: tar -C target/release -czvf ${{ env.ARCHIVE_NAME }} git-snapshot
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME }}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/octet-stream

  build-macos-aarch64-vendored:
    runs-on: macos-latest
    needs: create-release
    env:
      ARCHIVE_NAME: git-snapshot.macos-aarch64-vendored.tar.gz
    steps:
      - uses: actions/checkout@v3
      - run: rustup target add aarch64-apple-darwin
      - name: Build
        run: cargo build --release --target aarch64-apple-darwin --features vendored
      - name: Package
        run: tar -C target/aarch64-apple-darwin/release -czvf ${{ env.ARCHIVE_NAME }} git-snapshot
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME}}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/octet-stream
