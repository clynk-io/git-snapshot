name: Publish

on:
  push:
    tags: ["v*"]

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

  build-linux-x86:
    runs-on: ubuntu-latest
    needs: create-release
    env:
      ARCHIVE_NAME: git-snapshot.linux-x86.tar.gz
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release
      - name: Package
        run: tar -czvf ${{ env.ARCHIVE_NAME }} target/release/git-snapshot
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME}}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/octet-stream

  build-macos-x86_64:
    runs-on: macos-latest
    needs: create-release
    env:
      ARCHIVE_NAME: git-snapshot.macos-x86_64.tar.gz
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release
      - name: Package
        run: tar -czvf ${{ env.ARCHIVE_NAME }} target/release/git-snapshot
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME }}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/octet-stream
